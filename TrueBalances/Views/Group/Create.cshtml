@model GroupViewModel

@{
    ViewData["Title"] = "Ajouter un groupe";
}

<h1 class="custom-header text-center">@ViewData["Title"]</h1>

<hr />

<div class="container">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <form asp-action="Create" method="post">
                @Html.AntiForgeryToken()

                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <input type="hidden" asp-for="AvailableUsers" />

                <div class="form-group">
                    <label asp-for="Group.Name" class="control-label">Nom du groupe</label>
                    <input asp-for="Group.Name" class="form-control" />
                    <span asp-validation-for="Group.Name" class="text-danger"></span>
                </div>
                <div></div>
                <div class="form-group">
                    <label class="control-label">Ajouter les Membres</label>
                        <div></div>
                    @foreach (var user in Model.AvailableUsers)
                    {
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" name="SelectedUserIds" value="@user.Id" />
                            <label class="form-check-label">@user.FirstName @user.LastName</label>
                        </div>
                    }
                </div>
                    <div></div>

                <div class="form-group">
                    <input type="submit" value="Créer le groupe" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>
</div>

<div></div>

<div>
    <a asp-action="Index" class="action-link">Retour à la liste</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
