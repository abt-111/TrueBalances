@using TrueBalances.Areas.Identity.Data
@model IEnumerable<TrueBalances.Models.Expense>

@section SpecificStylesheet {
    <link rel="stylesheet" href="~/css/table.css" asp-append-version="true" />
}

@{
    ViewData["Title"] = "Gestion des Dépenses";
    var currentUserId = ViewBag.CurrentUserId;
    var users = ViewBag.Users as List<CustomUser>;
    var debts = ViewBag.Debts as Dictionary<string, decimal>;
    var groupId = ViewBag.GroupId;
}

<div class="container">

    <div class="row">
        <div class="col-12 text-center mb-3">
            <h1>Gestion des Dépenses</h1>
            <!-- Ajouter un bouton pour créer une nouvelle dépense -->
        </div>
        <p>
            <a asp-action="DepenseCreate" asp-route-groupId="@groupId" class="btn btn-primary">Ajouter une dépense</a>
        </p>
    </div>

    <div class="row">
        <!-- Colonne pour les dépenses plus large -->
        <div class="col-md-8">
            <table class="table table-striped table-bordered">
                <thead class="custom-table-header">
                    <tr>
                        <th>@Html.DisplayNameFor(model => model.Title)</th>
                        <th>@Html.DisplayNameFor(model => model.Amount)</th>
                        <th>@Html.DisplayNameFor(model => model.Date)</th>
                        <th>@Html.DisplayNameFor(model => model.Category)</th>
                        <th>@Html.DisplayNameFor(model => model.CustomUser)</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.Title)</td>
                            <td>@Html.DisplayFor(modelItem => item.Amount) €</td>
                            <td>@Html.DisplayFor(modelItem => item.Date)</td>
                            <td>@Html.DisplayFor(modelItem => item.Category!.Name)</td>
                            <td>@Html.DisplayFor(modelItem => item.CustomUser.FirstName)</td>
                            <td class="action-links text-center">
                                @* Affichage des boutons d'action *@
                                @if (currentUserId == item.CustomUserId)
                                {
                                    //<a asp-action="DepenseEdit" asp-route-id="@item.Id" asp-route-groupId="@item.GroupId" class="btn btn-primary">Modifier</a>

                                    <a asp-action="DepenseEdit" asp-route-id="@item.Id" asp-route-groupId="@item.GroupId" title="Modifier">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                }
                                <a asp-action="DepenseDetails" asp-route-id="@item.Id" asp-route-groupId="@item.GroupId" title="Détails">
                                    <i class="fas fa-info-circle"></i>
                                </a>
                                @if (currentUserId == item.CustomUserId)
                                {
                                    <a asp-action="Delete" asp-route-id="@item.Id" title="Supprimer">
                                        <i class="fas fa-trash-alt"></i>
                                    </a>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Colonne pour le récapitulatif plus étroite -->
        <div class="col-md-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Dette ou crédit ?</h5>
                </div>
                <div class="card-body">
                    <ul class="list-group list-group-flush">
                        @if (debts.Any(d => d.Value != 0))
                        {
                            @foreach (var userId in debts.Keys)
                            {
                                var user = users.Find(u => u.Id == userId);
                                var debt = debts.GetValueOrDefault(userId);

                                @if (debt < 0)
                                {
                                    <li class="list-group-item">
                                        @user.FirstName me doit @(-debt) €
                                    </li>
                                }
                                else if (debt != 0)
                                {
                                    <li class="list-group-item">
                                        Je dois @debt € à @user.FirstName
                                    </li>
                                }
                            }
                        }
                        else
                        {
                            <li class="list-group-item">
                                Je n'ai que de bons amis
                            </li>
                        }
                        <li class="list-group-item">
                            <a asp-action="Solde" style="color: #073b3a;">Tous les soldes</a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <div>
        <a asp-action="Index" class="btn btn-secondary">Retour aux Groupes</a>
        @* <a asp-controller="Home" asp-action="Index" style="color: #073b3a;">Retour à l'accueil</a> *@
    </div>
</div>

