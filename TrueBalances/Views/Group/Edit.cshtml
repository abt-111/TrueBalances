@model GroupViewModel

@{
    ViewData["Title"] = "Modifier le groupe";
    var availableUsers = Model.Users ?? new List<CustomUser>();
}

<h1 class="custom-header text-center">@ViewData["Title"]</h1>

<hr />

<div class="container">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <form asp-action="Edit" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <input type="hidden" asp-for="Group.Id" />

                <div class="form-group">
                    <label asp-for="Group.Name" class="control-label">Nom du groupe</label>
                    <input asp-for="Group.Name" class="form-control" />
                    <span asp-validation-for="Group.Name" class="text-danger"></span>
                </div>

                <h3>Membres du groupe</h3>
                <div class="form-group">
                    @if (availableUsers.Any())
                    {
                        @foreach (var user in availableUsers)
                        {
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="SelectedUserIds" value="@user.Id"
                                @(Model.Group.Members.Any(m => m.CustomUserId == user.Id) ? "checked" : "") />
                                <label class="form-check-label">
                                    @user.UserName
                                </label>
                            </div>
                        }
                    }
                    else
                    {
                        <p>Aucun utilisateur disponible</p>
                    }
                </div>

                <div class="form-group mt-4">
                    <input type="submit" value="Modifier" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>
</div>

<div class="mt-3">
    <a asp-action="Details" asp-route-id="@Model.Group.Id" class="btn btn-secondary">Retour</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
